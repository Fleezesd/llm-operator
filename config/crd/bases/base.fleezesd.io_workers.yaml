---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: workers.base.fleezesd.io
spec:
  group: base.fleezesd.io
  names:
    kind: Worker
    listKind: WorkerList
    plural: workers
    singular: worker
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: type
      type: string
    - jsonPath: .spec.model.name
      name: model
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Worker is the Schema for the workers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkerSpec defines the desired state of Worker
            properties:
              additionalEnvs:
                description: Additional env to use
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              creator:
                description: Creator defines datasource creator (AUTO-FILLED by webhook)
                type: string
              description:
                description: Description defines datasource description
                type: string
              displayName:
                description: DisplayName defines datasource display name
                type: string
              loader:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                type: object
              matchExpressions:
                description: MatchExpressions to schedule this worker
                items:
                  description: A node selector requirement is a selector that contains
                    values, a key, and an operator that relates the key and values.
                  properties:
                    key:
                      description: The label key that the selector applies to.
                      type: string
                    operator:
                      description: Represents a key's relationship to a set of values.
                        Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and
                        Lt.
                      type: string
                    values:
                      description: An array of string values. If the operator is In
                        or NotIn, the values array must be non-empty. If the operator
                        is Exists or DoesNotExist, the values array must be empty.
                        If the operator is Gt or Lt, the values array must have a
                        single element, which will be interpreted as an integer. This
                        array is replaced during a strategic merge patch.
                      items:
                        type: string
                      type: array
                  required:
                  - key
                  - operator
                  type: object
                type: array
              model:
                description: Model this worker wants to use
                properties:
                  apiGroup:
                    description: APIGroup is the group for the resource being referenced.
                      If APIGroup is not specified, the specified Kind must be in
                      the core API group. For any other third-party types, APIGroup
                      is required.
                    type: string
                  kind:
                    description: Kind is the type of resource being referenced
                    type: string
                  name:
                    description: Name is the name of resource being referenced
                    type: string
                  namespace:
                    description: Namespace is the namespace of resource being referenced
                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                      object is required in the referent namespace to allow that namespace's
                      owner to accept the reference. See the ReferenceGrant documentation
                      for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource
                      feature gate to be enabled.
                    type: string
                required:
                - kind
                - name
                type: object
              replicas:
                default: 1
                description: Replicas of this worker instance(1 by default)
                format: int32
                maximum: 1
                type: integer
              resources:
                description: Resource request&limits including - CPU or GPU - Memory
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              runner:
                properties:
                  image:
                    type: string
                  imagePullPolicy:
                    default: IfNotPresent
                    description: PullPolicy describes a policy for if/when to pull
                      a container image
                    type: string
                type: object
              storage:
                description: Storage claimed to store model files
                properties:
                  accessModes:
                    description: 'accessModes contains the desired access modes the
                      volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                    items:
                      type: string
                    type: array
                  dataSource:
                    description: 'dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim) If the provisioner
                      or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified
                      data source. When the AnyVolumeDataSource feature gate is enabled,
                      dataSource contents will be copied to dataSourceRef, and dataSourceRef
                      contents will be copied to dataSource when dataSourceRef.namespace
                      is not specified. If the namespace is specified, then dataSourceRef
                      will not be copied to dataSource.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: 'dataSourceRef specifies the object from which to
                      populate the volume with data, if a non-empty volume is desired.
                      This may be any object from a non-empty API group (non core
                      object) or a PersistentVolumeClaim object. When this field is
                      specified, volume binding will only succeed if the type of the
                      specified object matches some installed volume populator or
                      dynamic provisioner. This field will replace the functionality
                      of the dataSource field and as such if both fields are non-empty,
                      they must have the same value. For backwards compatibility,
                      when namespace isn''t specified in dataSourceRef, both fields
                      (dataSource and dataSourceRef) will be set to the same value
                      automatically if one of them is empty and the other is non-empty.
                      When namespace is specified in dataSourceRef, dataSource isn''t
                      set to the same value and must be empty. There are three important
                      differences between dataSource and dataSourceRef: * While dataSource
                      only allows two specific types of objects, dataSourceRef allows
                      any non-core object, as well as PersistentVolumeClaim objects.
                      * While dataSource ignores disallowed values (dropping them),
                      dataSourceRef preserves all values, and generates an error if
                      a disallowed value is specified. * While dataSource only allows
                      local objects, dataSourceRef allows objects in any namespaces.
                      (Beta) Using this field requires the AnyVolumeDataSource feature
                      gate to be enabled. (Alpha) Using the namespace field of dataSourceRef
                      requires the CrossNamespaceVolumeDataSource feature gate to
                      be enabled.'
                    properties:
                      apiGroup:
                        description: APIGroup is the group for the resource being
                          referenced. If APIGroup is not specified, the specified
                          Kind must be in the core API group. For any other third-party
                          types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                      namespace:
                        description: Namespace is the namespace of resource being
                          referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                          object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details. (Alpha) This field requires the
                          CrossNamespaceVolumeDataSource feature gate to be enabled.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: 'resources represents the minimum resources the volume
                      should have. If RecoverVolumeExpansionFailure feature is enabled
                      users are allowed to specify resource requirements that are
                      lower than previous value but must still be higher than capacity
                      recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider
                      for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: 'storageClassName is the name of the StorageClass
                      required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                    type: string
                  volumeMode:
                    description: volumeMode defines what type of volume is required
                      by the claim. Value of Filesystem is implied when not included
                      in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
              type:
                description: Type for this worker
                type: string
            required:
            - model
            type: object
          status:
            description: WorkerStatus defines the observed state of Worker
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastSuccessfulTime:
                      description: LastSuccessfulTime is repository Last Successful
                        Update Time
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
              podStatus:
                description: PodStatus is the observed stated of Worker pod
                properties:
                  conditions:
                    description: 'Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                    items:
                      description: PodCondition contains details for the current condition
                        of this pod.
                      properties:
                        lastProbeTime:
                          description: Last time we probed the condition.
                          format: date-time
                          type: string
                        lastTransitionTime:
                          description: Last time the condition transitioned from one
                            status to another.
                          format: date-time
                          type: string
                        message:
                          description: Human-readable message indicating details about
                            last transition.
                          type: string
                        reason:
                          description: Unique, one-word, CamelCase reason for the
                            condition's last transition.
                          type: string
                        status:
                          description: 'Status is the status of the condition. Can
                            be True, False, Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                          type: string
                        type:
                          description: 'Type is the type of the condition. More info:
                            https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions'
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  containerStatuses:
                    description: 'The list has one entry per container in the manifest.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'
                    items:
                      description: ContainerStatus contains details for the current
                        status of this container.
                      properties:
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: AllocatedResources represents the compute resources
                            allocated for this container by the node. Kubelet sets
                            this value to Container.Resources.Requests upon successful
                            pod admission and after successfully admitting desired
                            pod resize.
                          type: object
                        containerID:
                          description: ContainerID is the ID of the container in the
                            format '<type>://<container_id>'. Where type is a container
                            runtime identifier, returned from Version call of CRI
                            API (for example "containerd").
                          type: string
                        image:
                          description: 'Image is the name of container image that
                            the container is running. The container image may not
                            match the image used in the PodSpec, as it may have been
                            resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.'
                          type: string
                        imageID:
                          description: ImageID is the image ID of the container's
                            image. The image ID may not match the image ID of the
                            image used in the PodSpec, as it may have been resolved
                            by the runtime.
                          type: string
                        lastState:
                          description: LastTerminationState holds the last termination
                            state of the container to help debug container crashes
                            and restarts. This field is not populated if the container
                            is still running and RestartCount is 0.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                        name:
                          description: Name is a DNS_LABEL representing the unique
                            name of the container. Each container in a pod must have
                            a unique name across all container types. Cannot be updated.
                          type: string
                        ready:
                          description: "Ready specifies whether the container is currently
                            passing its readiness check. The value will change as
                            readiness probes keep executing. If no readiness probes
                            are specified, this field defaults to true once the container
                            is fully started (see Started field). \n The value is
                            typically used to determine whether a container is ready
                            to accept traffic."
                          type: boolean
                        resources:
                          description: Resources represents the compute resource requests
                            and limits that have been successfully enacted on the
                            running container after it has been started or has been
                            successfully resized.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartCount:
                          description: RestartCount holds the number of times the
                            container has been restarted. Kubelet makes an effort
                            to always increment the value, but there are cases when
                            the state may be lost due to node restarts and then the
                            value may be reset to 0. The value is never negative.
                          format: int32
                          type: integer
                        started:
                          description: Started indicates whether the container has
                            finished its postStart lifecycle hook and passed its startup
                            probe. Initialized as false, becomes true after startupProbe
                            is considered successful. Resets to false when the container
                            is restarted, or if kubelet loses state temporarily. In
                            both cases, startup probes will run again. Is always true
                            when no startupProbe is defined and container is running
                            and has passed the postStart lifecycle hook. The null
                            value must be treated the same as false.
                          type: boolean
                        state:
                          description: State holds details about the container's current
                            condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                      required:
                      - image
                      - imageID
                      - name
                      - ready
                      - restartCount
                      type: object
                    type: array
                  ephemeralContainerStatuses:
                    description: Status for any ephemeral containers that have run
                      in this pod.
                    items:
                      description: ContainerStatus contains details for the current
                        status of this container.
                      properties:
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: AllocatedResources represents the compute resources
                            allocated for this container by the node. Kubelet sets
                            this value to Container.Resources.Requests upon successful
                            pod admission and after successfully admitting desired
                            pod resize.
                          type: object
                        containerID:
                          description: ContainerID is the ID of the container in the
                            format '<type>://<container_id>'. Where type is a container
                            runtime identifier, returned from Version call of CRI
                            API (for example "containerd").
                          type: string
                        image:
                          description: 'Image is the name of container image that
                            the container is running. The container image may not
                            match the image used in the PodSpec, as it may have been
                            resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.'
                          type: string
                        imageID:
                          description: ImageID is the image ID of the container's
                            image. The image ID may not match the image ID of the
                            image used in the PodSpec, as it may have been resolved
                            by the runtime.
                          type: string
                        lastState:
                          description: LastTerminationState holds the last termination
                            state of the container to help debug container crashes
                            and restarts. This field is not populated if the container
                            is still running and RestartCount is 0.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                        name:
                          description: Name is a DNS_LABEL representing the unique
                            name of the container. Each container in a pod must have
                            a unique name across all container types. Cannot be updated.
                          type: string
                        ready:
                          description: "Ready specifies whether the container is currently
                            passing its readiness check. The value will change as
                            readiness probes keep executing. If no readiness probes
                            are specified, this field defaults to true once the container
                            is fully started (see Started field). \n The value is
                            typically used to determine whether a container is ready
                            to accept traffic."
                          type: boolean
                        resources:
                          description: Resources represents the compute resource requests
                            and limits that have been successfully enacted on the
                            running container after it has been started or has been
                            successfully resized.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartCount:
                          description: RestartCount holds the number of times the
                            container has been restarted. Kubelet makes an effort
                            to always increment the value, but there are cases when
                            the state may be lost due to node restarts and then the
                            value may be reset to 0. The value is never negative.
                          format: int32
                          type: integer
                        started:
                          description: Started indicates whether the container has
                            finished its postStart lifecycle hook and passed its startup
                            probe. Initialized as false, becomes true after startupProbe
                            is considered successful. Resets to false when the container
                            is restarted, or if kubelet loses state temporarily. In
                            both cases, startup probes will run again. Is always true
                            when no startupProbe is defined and container is running
                            and has passed the postStart lifecycle hook. The null
                            value must be treated the same as false.
                          type: boolean
                        state:
                          description: State holds details about the container's current
                            condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                      required:
                      - image
                      - imageID
                      - name
                      - ready
                      - restartCount
                      type: object
                    type: array
                  hostIP:
                    description: hostIP holds the IP address of the host to which
                      the pod is assigned. Empty if the pod has not started yet. A
                      pod can be assigned to a node that has a problem in kubelet
                      which in turns mean that HostIP will not be updated even if
                      there is a node is assigned to pod
                    type: string
                  hostIPs:
                    description: hostIPs holds the IP addresses allocated to the host.
                      If this field is specified, the first entry must match the hostIP
                      field. This list is empty if the pod has not started yet. A
                      pod can be assigned to a node that has a problem in kubelet
                      which in turns means that HostIPs will not be updated even if
                      there is a node is assigned to this pod.
                    items:
                      description: HostIP represents a single IP address allocated
                        to the host.
                      properties:
                        ip:
                          description: IP is the IP address assigned to the host
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  initContainerStatuses:
                    description: 'The list has one entry per init container in the
                      manifest. The most recent successful init container will have
                      ready = true, the most recently started container will have
                      startTime set. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status'
                    items:
                      description: ContainerStatus contains details for the current
                        status of this container.
                      properties:
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: AllocatedResources represents the compute resources
                            allocated for this container by the node. Kubelet sets
                            this value to Container.Resources.Requests upon successful
                            pod admission and after successfully admitting desired
                            pod resize.
                          type: object
                        containerID:
                          description: ContainerID is the ID of the container in the
                            format '<type>://<container_id>'. Where type is a container
                            runtime identifier, returned from Version call of CRI
                            API (for example "containerd").
                          type: string
                        image:
                          description: 'Image is the name of container image that
                            the container is running. The container image may not
                            match the image used in the PodSpec, as it may have been
                            resolved by the runtime. More info: https://kubernetes.io/docs/concepts/containers/images.'
                          type: string
                        imageID:
                          description: ImageID is the image ID of the container's
                            image. The image ID may not match the image ID of the
                            image used in the PodSpec, as it may have been resolved
                            by the runtime.
                          type: string
                        lastState:
                          description: LastTerminationState holds the last termination
                            state of the container to help debug container crashes
                            and restarts. This field is not populated if the container
                            is still running and RestartCount is 0.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                        name:
                          description: Name is a DNS_LABEL representing the unique
                            name of the container. Each container in a pod must have
                            a unique name across all container types. Cannot be updated.
                          type: string
                        ready:
                          description: "Ready specifies whether the container is currently
                            passing its readiness check. The value will change as
                            readiness probes keep executing. If no readiness probes
                            are specified, this field defaults to true once the container
                            is fully started (see Started field). \n The value is
                            typically used to determine whether a container is ready
                            to accept traffic."
                          type: boolean
                        resources:
                          description: Resources represents the compute resource requests
                            and limits that have been successfully enacted on the
                            running container after it has been started or has been
                            successfully resized.
                          properties:
                            claims:
                              description: "Claims lists the names of resources, defined
                                in spec.resourceClaims, that are used by this container.
                                \n This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate. \n This field
                                is immutable. It can only be set for containers."
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: Name must match the name of one entry
                                      in pod.spec.resourceClaims of the Pod where
                                      this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of
                                compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount
                                of compute resources required. If Requests is omitted
                                for a container, it defaults to Limits if that is
                                explicitly specified, otherwise to an implementation-defined
                                value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        restartCount:
                          description: RestartCount holds the number of times the
                            container has been restarted. Kubelet makes an effort
                            to always increment the value, but there are cases when
                            the state may be lost due to node restarts and then the
                            value may be reset to 0. The value is never negative.
                          format: int32
                          type: integer
                        started:
                          description: Started indicates whether the container has
                            finished its postStart lifecycle hook and passed its startup
                            probe. Initialized as false, becomes true after startupProbe
                            is considered successful. Resets to false when the container
                            is restarted, or if kubelet loses state temporarily. In
                            both cases, startup probes will run again. Is always true
                            when no startupProbe is defined and container is running
                            and has passed the postStart lifecycle hook. The null
                            value must be treated the same as false.
                          type: boolean
                        state:
                          description: State holds details about the container's current
                            condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format '<type>://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                              - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                      required:
                      - image
                      - imageID
                      - name
                      - ready
                      - restartCount
                      type: object
                    type: array
                  message:
                    description: A human readable message indicating details about
                      why the pod is in this condition.
                    type: string
                  nominatedNodeName:
                    description: nominatedNodeName is set only when this pod preempts
                      other pods on the node, but it cannot be scheduled right away
                      as preemption victims receive their graceful termination periods.
                      This field does not guarantee that the pod will be scheduled
                      on this node. Scheduler may decide to place the pod elsewhere
                      if other nodes become available sooner. Scheduler may also decide
                      to give the resources on this node to a higher priority pod
                      that is created after preemption. As a result, this field may
                      be different than PodSpec.nodeName when the pod is scheduled.
                    type: string
                  phase:
                    description: "The phase of a Pod is a simple, high-level summary
                      of where the Pod is in its lifecycle. The conditions array,
                      the reason and message fields, and the individual container
                      status arrays contain more detail about the pod's status. There
                      are five possible phase values: \n Pending: The pod has been
                      accepted by the Kubernetes system, but one or more of the container
                      images has not been created. This includes time before being
                      scheduled as well as time spent downloading images over the
                      network, which could take a while. Running: The pod has been
                      bound to a node, and all of the containers have been created.
                      At least one container is still running, or is in the process
                      of starting or restarting. Succeeded: All containers in the
                      pod have terminated in success, and will not be restarted. Failed:
                      All containers in the pod have terminated, and at least one
                      container has terminated in failure. The container either exited
                      with non-zero status or was terminated by the system. Unknown:
                      For some reason the state of the pod could not be obtained,
                      typically due to an error in communicating with the host of
                      the pod. \n More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase"
                    type: string
                  podIP:
                    description: podIP address allocated to the pod. Routable at least
                      within the cluster. Empty if not yet allocated.
                    type: string
                  podIPs:
                    description: podIPs holds the IP addresses allocated to the pod.
                      If this field is specified, the 0th entry must match the podIP
                      field. Pods may be allocated at most 1 value for each of IPv4
                      and IPv6. This list is empty if no IPs have been allocated yet.
                    items:
                      description: PodIP represents a single IP address allocated
                        to the pod.
                      properties:
                        ip:
                          description: IP is the IP address assigned to the pod
                          type: string
                      type: object
                    type: array
                  qosClass:
                    description: 'The Quality of Service (QOS) classification assigned
                      to the pod based on resource requirements See PodQOSClass type
                      for available QOS classes More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-qos/#quality-of-service-classes'
                    type: string
                  reason:
                    description: A brief CamelCase message indicating details about
                      why the pod is in this state. e.g. 'Evicted'
                    type: string
                  resize:
                    description: Status of resources resize desired for pod's containers.
                      It is empty if no resources resize is pending. Any changes to
                      container resources will automatically set this to "Proposed"
                    type: string
                  resourceClaimStatuses:
                    description: Status of resource claims.
                    items:
                      description: PodResourceClaimStatus is stored in the PodStatus
                        for each PodResourceClaim which references a ResourceClaimTemplate.
                        It stores the generated name for the corresponding ResourceClaim.
                      properties:
                        name:
                          description: Name uniquely identifies this resource claim
                            inside the pod. This must match the name of an entry in
                            pod.spec.resourceClaims, which implies that the string
                            must be a DNS_LABEL.
                          type: string
                        resourceClaimName:
                          description: ResourceClaimName is the name of the ResourceClaim
                            that was generated for the Pod in the namespace of the
                            Pod. It this is unset, then generating a ResourceClaim
                            was not necessary. The pod.spec.resourceClaims entry can
                            be ignored in this case.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  startTime:
                    description: RFC 3339 date and time at which the object was acknowledged
                      by the Kubelet. This is before the Kubelet pulled the container
                      image(s) for the pod.
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
